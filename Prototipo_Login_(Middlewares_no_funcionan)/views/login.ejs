                
                
                
                
                
<%- include('partials/header1') %>   
                

                

<form action="/login" method="POST"> <!-- Cambia a POST y define la acción -->
    <div class="container">
        <div class="row">
            <div class="col-md-6"> <!-- Ajusta el número para cambiar el tamaño -->
                <br>
                <br>
                <br>
                <h3 class="w3layouts-heading">Iniciar Sesión</h3>
                
                <!-- Mensaje de error (si corresponde) -->
                <div id="error-message" class="alert alert-danger" style="display: none;"></div>

                <div class="mb-3">
                    <label for="exampleInputEmail1" class="form-label">Correo electrónico</label>
                    <input type="email" class="form-control" id="exampleInputEmail1" name="email" required autocomplete="email">

                </div>
                <div class="mb-3">
                    <label for="exampleInputPassword1" class="form-label">Contraseña</label>
                    <input type="password" class="form-control" id="exampleInputPassword1" name="contrasena" required> <!-- Agregar name y required -->
                </div>
                <!-- <div class="mb-3 form-check">
                    <input type="checkbox" class="form-check-input" id="exampleCheck1">
                    <label class="form-check-label" for="exampleCheck1">Recordar contraseña</label>
                </div> -->
                <br>
                <button type="submit" class="btn btn-primary">Iniciar Sesión</button>
            </div>
        </div>
    </div>
</form>

<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>

<script>

console.log('Script cargado'); 
console.log(localStorage.getItem('token'));
console.log('---------------------------'); 
// Función para agregar el token al header de la solicitud
const agregarToken = () => {
    const token = localStorage.getItem('token');
    console.log('Token obtenido(funcion agregar token):', token); // Para verificar si estás recuperando el token
    return {
        headers: {
            Authorization: `Bearer ${token}`,
            'Content-Type': 'application/json'
        }
    };
};

// Manejo del envío del formulario
document.querySelector('form[action="/login"]').addEventListener('submit', async (e) => {
    console.log('Formulario enviado'); 
    e.preventDefault(); 

    const email = document.getElementById('exampleInputEmail1').value;
    const contrasena = document.getElementById('exampleInputPassword1').value;

    try {
        const response = await fetch('/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ email, contrasena }),
        });
        console.log('Respuesta del servidor:', response);
        const data = await response.json();
        console.log('Estado de la respuesta:', response.status);
        console.log('Datos recibidos:', data);

        if (response.ok) {
            console.log('Tipo de usuario:', data.tipo); // Aquí va el log
            localStorage.setItem('token', data.token);
            console.log('Token almacenado en localStorage:', localStorage.getItem('token'));

            if (data.tipo === 1) {
                // Verificar token antes de redireccionar
                //const responseAdmin = await fetch('/ruta-admin', agregarToken());
                localStorage.setItem('token', data.token); // Asegúrate de que el token se guarda aquí
                const token = localStorage.getItem('token');
                
                const responseAdmin = await fetch('/ruta-admin', {
                    method: 'GET', // Asegura que GET sea explícito aquí
                    //...agregarToken() // Incluye el token en los headers
                    headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json' // Asegúrate de que el tipo de contenido es correcto
                    }
                });
                console.log('Header de la solicitud:', responseAdmin.headers.get('Authorization'));
                
                if (responseAdmin.ok) {
                    console.log('Esto es antes de mandar a ruta admin, Token enviado:', agregarToken().headers.Authorization);
                    
                    window.location.href = '/ruta-admin';
                } else {
                    const errorMessage = document.getElementById('error-message');
                    
                    errorMessage.innerText = 'Error al acceder a la ruta de administrador.';
                    errorMessage.style.display = 'block';
                }
            } else {
                window.location.href = '/';
            }
        } else {
            console.error('Error en el login:', response.status);
            console.log('paso por el else y no por response.ok')
            const errorMessage = document.getElementById('error-message');
            errorMessage.innerText = data.error || 'Error en el inicio de sesión.';
            errorMessage.style.display = 'block';
        }
    } catch (error) {
        console.error('Error en el proceso de inicio de sesión:', error);
    }
});
</script>



<!-- <script>
    console.log('Script cargado'); // Esto verifica que el script está en ejecución

    // Manejo del envío del formulario
    document.querySelector('form[action="/login"]').addEventListener('submit', async (e) => {
        console.log('Formulario enviado'); // Esto verifica que el formulario sea capturado por el código
        e.preventDefault(); // Evita el envío tradicional del formulario

        const email = document.getElementById('exampleInputEmail1').value;
        const contrasena = document.getElementById('exampleInputPassword1').value;

        try {
            const response = await fetch('/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ email, contrasena }),
            });

            const data = await response.json();
            console.log('Estado de la respuesta:', response.status);
            console.log('Datos recibidos:', data);

            if (response.ok) {
                localStorage.setItem('token', data.token);

                if (data.tipo === 1) {
                    window.location.href = '/ruta-admin';
                } else {
                    window.location.href = '/register';
                }
            } else {
                const errorMessage = document.getElementById('error-message');
                errorMessage.innerText = data.error || 'Error en el inicio de sesión.';
                errorMessage.style.display = 'block';
            }
        } catch (error) {
            console.error('Error en el proceso de inicio de sesión:', error);
        }
    });
</script> -->








<!-- <form action="/login" method="POST">  Cambia a POST y define la acción 
    <div class="container">
        <div class="row">
            <div class="col-md-6">  Ajusta el número para cambiar el tamaño 
                <br>
                <br>
                <br>
                <h3 class="w3layouts-heading">Iniciar Sesión</h3>
                <div class="mb-3">
                    <label for="exampleInputEmail1" class="form-label">Correo electrónico</label>
                    <input type="email" class="form-control" id="exampleInputEmail1" name="email" required>  Agregar name y required 
                </div>
                <div class="mb-3">
                    <label for="exampleInputPassword1" class="form-label">Contraseña</label>
                    <input type="password" class="form-control" id="exampleInputPassword1" name="contrasena" required>  Agregar name y required 
                </div>
                <div class="mb-3 form-check">
                    <input type="checkbox" class="form-check-input" id="exampleCheck1">
                    <label class="form-check-label" for="exampleCheck1">Recordar contraseña</label>
                </div>
                <button type="submit" class="btn btn-primary">Iniciar Sesión</button>
            </div>
        </div>
    </div>
</form> -->





				<!-- <form>
					<div class="container ">
						<div class="row">
							<div class="col-md-6"> <!-- Ajusta el número para cambiar el tamaño 
								<br>
								<br>
								<br>
								<h3 class="w3layouts-heading ">Iniciar Sesión</h3>
								<div class="mb-3">
									<label for="exampleInputEmail1" class="form-label">Correo electrónico</label>
									<input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp">
								</div>
								<div class="mb-3">
									<label for="exampleInputPassword1" class="form-label">Contraseña</label>
									<input type="password" class="form-control" id="exampleInputPassword1">
								</div>
								<div class="mb-3 form-check">
									<input type="checkbox" class="form-check-input" id="exampleCheck1">
									<label class="form-check-label" for="exampleCheck1">Recordar contraseña</label>
								</div>
								<button type="submit" class="btn btn-primary">Iniciar Sesión</button>
							</div>
						</div>
					</div>
				</form> -->


    
              

<%- include('partials/footer1') %>

